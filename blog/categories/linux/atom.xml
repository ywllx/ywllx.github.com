<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | 其实很简单]]></title>
  <link href="http://ywllx.github.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://ywllx.github.com/"/>
  <updated>2014-08-04T23:17:40-07:00</updated>
  <id>http://ywllx.github.com/</id>
  <author>
    <name><![CDATA[Fred Yan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Liunx CPU 性能分析]]></title>
    <link href="http://ywllx.github.com/blog/2014/08/04/linux-cpu-performance/"/>
    <updated>2014-08-04T18:07:00-07:00</updated>
    <id>http://ywllx.github.com/blog/2014/08/04/linux-cpu-performance</id>
    <content type="html"><![CDATA[<hr />

<p>含泪星光 打亮了旧的记忆 我们还会相遇 一定有原因 滚烫星光 就像埋藏的真心 只为一个人狂热 烧红了梦境 把漆黑忘记。</p>


<p>许久没回到这个博客了，哎，注定是个一事无成的人啊，今天再次回到这里，希望以后常更新，能够坚持下去。这篇博客主要在Linux对CPU性能进行监控和分析</P>


<!--more-->


<hr />

<h4>CPU Load(负载) vs utilization(利用率)</h4>

<p>前一段时间做监控时，发现window系统下CPU负责和CPU利用率有很大的不同，而且在一个linux负载很低的集群上启动一个作业时，发现CPU利用率很快到了90%，而监控到的负载此时却仍然很低。因此觉得两者有很大不同，[这篇文章](www.baidu.com)和wiki的[解释]这里简单做个总结：</p>


<p>在Linux/Unix下，CPU利用率（CPU utilization）分为用户态，系统态和空闲态，分别表示CPU处于用户态执行的时间，系统内核执行的时间，和空闲系统进程执行的时间。平时所说的CPU利用率是指：CPU执行非系统空闲进程的时间 / CPU总的执行时间。在Linux的内核中，有一个全局变量：Jiffies。 Jiffies代表时间。它的单位随硬件平台的不同而不同，系统里定义了一个常数HZ----代表每秒种最小时间间隔的数目。这样jiffies的单位就是1/HZ。Intel平台jiffies的单位是1/100秒，这就是系统所能分辨的最小时间间隔了。每个CPU时间片，Jiffies都要加1。 CPU的利用率就是用执行用户态+系统态的Jiffies除以总的Jifffies来表示。</p>


<p>CPU负载取决于CPU进程队列长度而不是CPU利用率。什么决定了CPU进程队列长度？它包括计算处于一种running或者runable(waiting for CPU,以及一些进程处于uninterruptable sleep states(usually waiting for disk activity)，具体可参考wiki的解释。</p>


<p>它们之间有什么不同呢？主要反映在两方面，<a href="http://www.linuxjournal.com/article/9001?page=0,0">这篇文章</a>(它对CPU负载和利用率也做了更加详细的解释)这段话解释得很清楚：The load averages differ from CPU percentage in two significant ways: 1) load averages measure the trend in CPU utilization not only an instantaneous snapshot, as does percentage, and 2) load averages include all demand for the CPU not only how much was active at the time of measurement.</p></p>
]]></content>
  </entry>
  
</feed>
